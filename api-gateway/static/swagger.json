{
    "openapi": "3.0.0",
    "info": {
      "title": "CRM API Gateway",
      "description": "API Gateway for CRM Microservices",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://127.0.0.1:5003",
        "description": "Local development server"
      }
    ],
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    },
    "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["admin", "sales_rep", "user"],
                    "default": "user"
                  }
                },
                "required": ["email", "first_name", "last_name", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request, email already registered"
          }
        }
      }
    },
      "/api/auth/login": {
        "post": {
          "tags": ["Authentication"],
          "summary": "Login user",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "password": {
                      "type": "string",
                      "format": "password"
                    }
                  },
                  "required": ["email", "password"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Invalid email or password"
            }
          }
        }
      },
      "/api/auth/me": {
        "get": {
          "tags": ["Authentication"],
          "summary": "Get current user information",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Current user information",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/auth/users": {
        "get": {
          "tags": ["Users"],
          "summary": "Get all users",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "List of users",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/auth/users/{user_id}": {
        "put": {
          "tags": ["Users"],
          "summary": "Update user",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "role": {
                      "type": "string",
                      "enum": ["admin", "sales_rep", "user"]
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "password": {
                      "type": "string",
                      "format": "password"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User updated successfully"
            },
            "400": {
              "description": "Bad request, invalid role or email already registered"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "delete": {
          "tags": ["Users"],
          "summary": "Delete user",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/api/auth/user-role": {
        "get": {
          "tags": ["Authentication"],
          "summary": "Get current user role",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Current user role",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": ["admin", "sales_rep", "user"]
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/api/customers": {
        "get": {
          "tags": ["Customers"],
          "summary": "Get all customers with pagination and search",
         
          "responses": {
            "200": {
              "description": "List of customers with pagination info",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "customers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "company": {
                              "type": "string"
                            },
                            "address": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "metadata": {
                              "type": "object"
                            },
                            "created_by": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      },
                      "total": {
                        "type": "integer"
                      },
                      "page": {
                        "type": "integer"
                      },
                      "per_page": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": ["Customers"],
          "summary": "Create new customer",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "company": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "metadata": {
                      "type": "object"
                    }
                  },
                  "required": ["name", "email", "phone"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Customer created successfully"
            },
            "400": {
              "description": "Email already registered"
            }
          }
        }
      },
      "/api/customers/{customer_id}": {
        "get": {
          "tags": ["Customers"],
          "summary": "Get customer by ID",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "customer_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Customer details"
            },
            "404": {
              "description": "Customer not found"
            }
          }
        },
        "put": {
          "tags": ["Customers"],
          "summary": "Update customer",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "customer_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "company": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "metadata": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Customer updated successfully"
            },
            "400": {
              "description": "Email already registered"
            },
            "404": {
              "description": "Customer not found"
            }
          }
        },
        "delete": {
          "tags": ["Customers"],
          "summary": "Delete customer",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "customer_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Customer deleted successfully"
            },
            "404": {
              "description": "Customer not found"
            }
          }
        },
        "/api/customers/{customer_id}/notes": {
          "get": {
            "tags": ["Customers"],
            "summary": "Get notes for a customer",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "customer_id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "List of notes",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "notes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "404": {
                "description": "Customer not found"
              }
            }
          },
          "post": {
            "tags": ["Customers"],
            "summary": "Add note to customer",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "customer_id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "type": "string"
                      }
                    },
                    "required": ["content"]
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "Note created successfully"
              },
              "400": {
                "description": "Note with same content already exists"
              },
              "404": {
                "description": "Customer not found"
              }
            }
          }
        },
        "/api/customers/notes/{note_id}": {
          "put": {
            "tags": ["Customers"],
            "summary": "Update note",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "note_id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "type": "string"
                      }
                    },
                    "required": ["content"]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Note updated successfully"
              },
              "404": {
                "description": "Note not found"
              }
            }
          },
          "delete": {
            "tags": ["Customers"],
            "summary": "Delete note",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "note_id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Note deleted successfully"
              },
              "404": {
                "description": "Note not found"
              }
            }
          }
        },
        "/api/customers/notes": {
          "get": {
            "tags": ["Customers"],
            "summary": "Get all notes with pagination and search",
            "parameters": [
              {
                "name": "page",
                "in": "query",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                }
              },
              {
                "name": "per_page",
                "in": "query",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 10
                }
              },
              {
                "name": "search",
                "in": "query",
                "required": false,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "sort_by",
                "in": "query",
                "required": false,
                "schema": {
                  "type": "string",
                  "default": "created_at"
                }
              },
              {
                "name": "order",
                "in": "query",
                "required": false,
                "schema": {
                  "type": "string",
                  "enum": ["asc", "desc"],
                  "default": "desc"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "List of notes with pagination info",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "notes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/sales": {
        "get": {
          "tags": ["Sales"],
          "summary": "Get all sales",
          "responses": {
            "200": {
              "description": "List of sales"
            }
          }
        },
        "post": {
          "tags": ["Sales"],
          "summary": "Create new sale",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer_id": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Sale created successfully"
            }
          }
        }
      },
      "/api/sales/{sale_id}": {
        "get": {
          "tags": ["Sales"],
          "summary": "Get sale by ID",
          "parameters": [
            {
              "name": "sale_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Sale details"
            }
          }
        }
      },
      "/api/sale-stages": {
        "post": {
          "tags": ["Sales"],
          "summary": "Create new sale stage",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sale_id": {
                      "type": "string"
                    },
                    "stage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Sale stage created successfully"
            }
          }
        }
      },
      "/api/sales/{sale_id}/last-stage": {
        "get": {
          "tags": ["Sales"],
          "summary": "Get last stage of a sale",
          "parameters": [
            {
              "name": "sale_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Last stage details"
            }
          }
        }
      }
    }
  }